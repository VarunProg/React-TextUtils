{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","text","TextForm","useState","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","join","length","Alert","alert","class","msg","App","setmode","settext","setalert","message","setTimeout","aboutText","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.830bca6e.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> \r\n            </li> */}\r\n\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' :'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.text}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');//enter text here\r\n\r\n    const ClicklUpHandle = () => {\r\n        // console.log(\"clicked\" + text);\r\n        // setText('you have clicked hanled up click' );\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"Success\");\r\n    }\r\n\r\n\r\n    const handleOnchange = (event) => {\r\n        //console.log(event.target.value)//grab event object\r\n        setText(event.target.value);\r\n\r\n    }\r\n\r\n    const ClickLoHandle = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"Success\");\r\n    }\r\n\r\n\r\n    const ClearText = () => {\r\n\r\n        setText('');\r\n        props.showAlert(\"Text Clear\", \"Success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed Extra Spaces\", \"Success\");\r\n    }\r\n\r\n\r\n    return (\r\n        //unable mode and set text color\r\n        <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n            <h1>{props.heading}</h1>\r\n\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"mybox\" rows=\"8\" style={{ backgroundColor: props.mode === 'dark' ? '#13466e' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={ClicklUpHandle}>Convert text to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={ClickLoHandle}>Convert text to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={ClearText}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <div className=\"container my-2\">\r\n                <h3>Your text summary </h3>\r\n                <p>Total characters {text.length}</p>\r\n                <p>Number of words are {text.split(\" \").length}</p>\r\n                <p>Minutes to read{0.008 * text.split(\" \").length}</p>\r\n                <h3>Preview</h3>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show` }role=\"alert\">\r\n            <strong>{props.alert.type}</strong>  {props.alert.msg}\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); // to check the dark mode\n  const [text, settext] = useState('Enable Dark Mode');\n  const [alert, setalert] = useState(null); // setting alert initial value is null\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      settext('Enable Light Mode');\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark Mode has been Enabled\", \"success\"); // calling showAlert fucntion and passing arguments\n    }\n    else {\n      setmode('light');\n      settext('Enable Dark Mode');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been Enabled\", \"Success\");\n    }\n  }\n\n  const showAlert = (message, type) => { // updating alert by using function and setting parameters\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => { //remove alert and by default null\n      setalert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} text={text} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n  \n          {/* <Switch>\n            <Route path=\"/about\">\n              <About /> */}\n            {/* </Route>\n            <Route path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}